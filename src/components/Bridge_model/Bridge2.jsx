/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 src/models/Bridge2.gltf
*/

import React, { useRef } from 'react'
import { MeshReflectorMaterial, useGLTF, useTexture } from '@react-three/drei'

import * as THREE from "three";
import { useCustomization } from '../../contexts/Customization';

//textures
import { 
  Bricks1, 
  Bricks2, 
  Metal, 
  Aluminum, 
  Psico1, 
  Psico2, 
  Psico3, 
  Psico4, 
  Psico5, 
  Psico6, 
  Psico7, 
  Psico8, 
  Psico9,
  Psico10
} from '../textures';

const Bridge2 = (props) => {

  const {bridgeTexture, bridgeColor, bridgeMaterial} = useCustomization();

  const { nodes, materials } = useGLTF('src/models/bridge2/Bridge2.gltf')

  const hoja = "original"

  let texture //variable where to save the selected texture

  let material = bridgeMaterial //variable that defines the material

  //Valid which texture I am selecting
  if (bridgeTexture === "original") {
    texture=Bricks1()
  }if (bridgeTexture === "ladrillos") {
    texture=Bricks2()
  }if (bridgeTexture === "metal") {
    texture=Metal()
  }if (bridgeTexture === "aluminum") {
    texture=Aluminum()
  }if (bridgeTexture === "psico1") {
    texture=Psico1()
  }if (bridgeTexture === "psico2") {
    texture=Psico2()
  }if (bridgeTexture === "psico3") {
    texture=Psico3()
  }if (bridgeTexture === "psico4") {
    texture=Psico4()
  }if (bridgeTexture === "psico5") {
    texture=Psico5()
  }if (bridgeTexture === "psico6") {
    texture=Psico6()
  }if (bridgeTexture === "psico7") {
    texture=Psico7()
  }if (bridgeTexture === "psico8") {
    texture=Psico8()
  }if (bridgeTexture === "psico9") {
    texture=Psico9()
  }if (bridgeTexture === "psico10") {
    texture=Psico10()
  }

  //Valid which material I am selecting
  if (material === "standard") {
    console.log("soy standard");
    return (
      <group {...props} dispose={null}>
        {/* <mesh geometry={nodes.Bridge1_1.geometry} material={materials.TX_Branch}  /> */}{/* Estate */}
        {/* <mesh>
          <meshStandardMaterial 
            geometry={nodes.Bridge1_1.geometry} 
            material={materials.TX_Branch} 
            color={
              bridgeColor == 1 ? "#FFFFFF" :
              bridgeColor == 2 ? "#808080" :
              bridgeColor == 3 ? "#000000" :
              bridgeColor.color
            }
          />
        </mesh> */}
        {/* <mesh geometry={nodes.Bridge1_2.geometry} material={materials.TX_Leaf2} /> */}{/* orange leaves */}
        <mesh>
          <meshStandardMaterial 
            geometry={nodes.Bridge1_2.geometry} 
            material={materials.TX_Leaf2} 
            color={
              bridgeColor == 1 ? "#FFFFFF" :
              bridgeColor == 2 ? "#808080" :
              bridgeColor == 3 ? "#000000" :
              bridgeColor.color
            }
          />
        </mesh>
        {/* <mesh geometry={nodes.Bridge1_3.geometry} material={materials.TX_Leaf} color={leafColor.color}  /> */}{/* Green leaves */}
        {/* <mesh geometry={nodes.Bridge1_3.geometry}>
          <meshStandardMaterial 
            {...hoja === "original" ? materials.TX_Leaf : materials.TX_Leaf} 
            color={
              bridgeColor == 1 ? "#FFFFFF" :
              bridgeColor == 2 ? "#808080" :
              bridgeColor == 3 ? "#000000" :
              bridgeColor.color
            }  
          />
        </mesh> */}
        {/* <mesh geometry={nodes.Bridge1_4.geometry} material={materials.TX_Bridge}  /> */}{/* Bridge */}
        <mesh geometry={nodes.Bridge1_4.geometry}>{/* Bridge with changed textures */}
          <meshStandardMaterial 
            {...texture}/* add the texture */
            color={
              bridgeColor == 1 ? "#FFFFFF" :
              bridgeColor == 2 ? "#808080" :
              bridgeColor == 3 ? "#000000" :
              bridgeColor.color
            }
          />
        </mesh>
        {/* <mesh geometry={nodes.Bridge1_5.geometry} material={materials.TX_Lamp} /> */}{/* crystal lamps */}
        <mesh>
        <meshStandardMaterial 
          geometry={nodes.Bridge1_5.geometry} 
          material={materials.TX_Lamp} 
          color={
            bridgeColor == 1 ? "#FFFFFF" :
            bridgeColor == 2 ? "#808080" :
            bridgeColor == 3 ? "#000000" :
            bridgeColor.color
          }
        />
        </mesh>
      </group>
    )
  }if (material === "metallic") {
    console.log("soy metallic");
    return (
      <group {...props} dispose={null}>
        {/* <mesh geometry={nodes.Bridge1_1.geometry} material={materials.TX_Branch}  /> */}{/* Estate */}
        {/* <mesh>
          <meshStandardMaterial 
            geometry={nodes.Bridge1_1.geometry} 
            material={materials.TX_Branch} 
            color={
              bridgeColor == 1 ? "#FFFFFF" :
              bridgeColor == 2 ? "#808080" :
              bridgeColor == 3 ? "#000000" :
              bridgeColor.color
            }
          />
        </mesh> */}
        {/* <mesh geometry={nodes.Bridge1_2.geometry} material={materials.TX_Leaf2} /> */}{/* orange leaves */}
        {/* <mesh>
          <meshStandardMaterial 
            geometry={nodes.Bridge1_2.geometry} 
            material={materials.TX_Leaf2} 
            color={
              bridgeColor == 1 ? "#FFFFFF" :
              bridgeColor == 2 ? "#808080" :
              bridgeColor == 3 ? "#000000" :
              bridgeColor.color
            }
          />
        </mesh> */}
        {/* <mesh geometry={nodes.Bridge1_3.geometry} material={materials.TX_Leaf} color={leafColor.color}  /> */}{/* Green leaves */}
        {/* <mesh geometry={nodes.Bridge1_3.geometry}>
          <meshStandardMaterial 
            {...hoja === "original" ? materials.TX_Leaf : materials.TX_Leaf} 
            color={
              bridgeColor == 1 ? "#FFFFFF" :
              bridgeColor == 2 ? "#808080" :
              bridgeColor == 3 ? "#000000" :
              bridgeColor.color
            }
          />
        </mesh> */}
        {/* <mesh geometry={nodes.Bridge1_4.geometry} material={materials.TX_Bridge}  /> */}{/* Bridge */}
        <mesh geometry={nodes.Bridge1_4.geometry}>{/* Bridge with changed textures */}
          <MeshReflectorMaterial 
            {...texture}/* add the texture */
            color={
              bridgeColor == 1 ? "#FFFFFF" :
              bridgeColor == 2 ? "#808080" :
              bridgeColor == 3 ? "#000000" :
              bridgeColor.color
            }
            blur={[300, 100]}
            resolution={1024}
            mixBlur={1}
            mixStrength={10}
            roughness={1}
            depthScale={0.2}
            minDepthThreshold={0.4}
            maxDepthThreshold={1.4}
            metalness={0.30}
          />
        </mesh>
        {/* <mesh geometry={nodes.Bridge1_5.geometry} material={materials.TX_Lamp} /> */}{/* crystal lamps */}
        <mesh>
        <meshStandardMaterial 
          geometry={nodes.Bridge1_5.geometry} 
          material={materials.TX_Lamp} 
          color={
            bridgeColor == 1 ? "#FFFFFF" :
            bridgeColor == 2 ? "#808080" :
            bridgeColor == 3 ? "#000000" :
            bridgeColor.color
          }
        />
        </mesh>
      </group>
    )
  }
}

useGLTF.preload('src/models/bridge2/Bridge2.gltf')

export default Bridge2