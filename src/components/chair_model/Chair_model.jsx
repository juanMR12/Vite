/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 src/models/chair/painted_wooden_chair_01_4k.gltf
*/

import React, { useRef } from 'react'
import { MeshReflectorMaterial, useGLTF, useTexture } from '@react-three/drei'

import * as THREE from "three";
import { useCustomization } from '../../contexts/Customization';

//textures
import { 
  Bricks1, 
  Bricks2, 
  Metal, 
  Aluminum, 
  Psico1, 
  Psico2, 
  Psico3, 
  Psico4, 
  Psico5, 
  Psico6, 
  Psico7, 
  Psico8, 
  Psico9,
  Psico10
} from '../textures';

export function Chair_model(props) {

  const {chairTexture, chairColor, chairMaterial} = useCustomization();

  const { nodes, materials } = useGLTF('src/models/chair/painted_wooden_chair_01_4k.gltf')

  let texture //variable where to save the selected texture

  let material = chairMaterial //variable that defines the material

  if (chairTexture === "original") {
    texture=Bricks1()
  }if (chairTexture === "ladrillos") {
    texture=Bricks2()
  }if (chairTexture === "metal") {
    texture=Metal()
  }if (chairTexture === "aluminum") {
    texture=Aluminum()
  }if (chairTexture === "psico1") {
    texture=Psico1()
  }if (chairTexture === "psico2") {
    texture=Psico2()
  }if (chairTexture === "psico3") {
    texture=Psico3()
  }if (chairTexture === "psico4") {
    texture=Psico4()
  }if (chairTexture === "psico5") {
    texture=Psico5()
  }if (chairTexture === "psico6") {
    texture=Psico6()
  }if (chairTexture === "psico7") {
    texture=Psico7()
  }if (chairTexture === "psico8") {
    texture=Psico8()
  }if (chairTexture === "psico9") {
    texture=Psico9()
  }if (chairTexture === "psico10") {
    texture=Psico10()
  }

  if (material === "standard") {
    return (
      <group {...props} dispose={null}>
        {/* <mesh scale={4} geometry={nodes.painted_wooden_chair_01.geometry} material={materials.painted_wooden_chair_01} color={chairColor.color} /> */}
        <mesh scale={4} geometry={nodes.painted_wooden_chair_01.geometry}>{/* Chair with changed textures */}
          <meshStandardMaterial
            {...texture}
            color={
              chairColor == 1 ? "#FFFFFF" :
              chairColor == 2 ? "#808080" :
              chairColor == 3 ? "#000000" :
              chairColor.color
            }
          />
        </mesh>
      </group>
    )
  }if (material === "metallic") {
    return (
      <group {...props} dispose={null}>
        {/* <mesh scale={4} geometry={nodes.painted_wooden_chair_01.geometry} material={materials.painted_wooden_chair_01} color={chairColor.color} /> */}
        <mesh scale={4} geometry={nodes.painted_wooden_chair_01.geometry}>{/* Chair with changed textures */}
          <MeshReflectorMaterial
            {...texture}
            color={
              chairColor == 1 ? "#FFFFFF" :
              chairColor == 2 ? "#808080" :
              chairColor == 3 ? "#000000" :
              chairColor.color
            }
            blur={[300, 100]}
            resolution={1024}
            mixBlur={1}
            mixStrength={10}
            roughness={1}
            depthScale={0.2}
            minDepthThreshold={0.4}
            maxDepthThreshold={1.4}
            metalness={0.30}
          />
        </mesh>
      </group>
    )
  }
  
}

useGLTF.preload('src/models/chair/painted_wooden_chair_01_4k.gltf')

export default Chair_model